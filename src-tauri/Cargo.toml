[package]
name = "app"
version = "0.4.2"
description = "RE Engine Unpacker"
authors = ["Eigeen <dengyk2002@qq.com>"]
license = "MIT"
repository = "https://github.com/eigeen/ree-pak-rs"
default-run = "app"
edition = "2024"
rust-version = "1.85"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
ree-pak-core = { path = "../../ree-pak-core" }
re-tex = { git = "https://github.com/eigeen/re-tex", features = ["image"] }

tauri = { version = "2", features = ["protocol-asset"] }
tauri-plugin-dialog = "2"

serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
uuid = { version = "1.10", features = [
    "v4",
    "fast-rng",
    "macro-diagnostics",
    "serde",
] }
anyhow = "1.0"
thiserror = "2.0"
rustc-hash = "2.0"
nohash = "0.2"
rayon = "1.10"
log = { version = "0.4", features = ["std"] }
parking_lot.workspace = true
tokio = "1.44"
self-replace = "1.5"
tempfile = "3.19"
semver = "1.0"
chrono = "0.4"
sha2 = "0.10"
tauri-plugin-fs = "2"
tauri-plugin-http = { version = "2", features = ["json", "brotli", "gzip"] }
tauri-plugin-opener = "2"
tauri-plugin-process = "2"
zip = { version = "4.0", default-features = false, features = ["deflate"] }
indexmap.workspace = true
walkdir.workspace = true
# for preview
image = { version = "0.25", default-features = false, features = ["png", "rayon"] }

[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.61", features = ["Win32_UI_WindowsAndMessaging"] }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

nightly = []
